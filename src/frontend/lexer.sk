################################################################################
#
# This is a generated file, all edits will be lost!
#
################################################################################

namespace Skew {
  enum TokenKind {
    ANNOTATION
    ARROW
    AS
    ASSIGN
    ASSIGN_BITWISE_AND
    ASSIGN_BITWISE_OR
    ASSIGN_BITWISE_XOR
    ASSIGN_DIVIDE
    ASSIGN_INDEX
    ASSIGN_MINUS
    ASSIGN_MULTIPLY
    ASSIGN_NULL
    ASSIGN_PLUS
    ASSIGN_POWER
    ASSIGN_REMAINDER
    ASSIGN_SHIFT_LEFT
    ASSIGN_SHIFT_RIGHT
    ASSIGN_UNSIGNED_SHIFT_RIGHT
    BITWISE_AND
    BITWISE_OR
    BITWISE_XOR
    BREAK
    CASE
    CATCH
    CHARACTER
    CLASS
    COLON
    COMMA
    COMMENT
    COMPARE
    CONST
    CONTINUE
    DECREMENT
    DEF
    DEFAULT
    DIVIDE
    DOT
    DOT_DOT
    DOUBLE
    DOUBLE_COLON
    DYNAMIC
    ELSE
    END_OF_FILE
    ENUM
    EQUAL
    ERROR
    FALSE
    FINALLY
    FOR
    GREATER_THAN
    GREATER_THAN_OR_EQUAL
    IDENTIFIER
    IF
    IN
    INCREMENT
    INDEX
    INT
    INTERFACE
    INT_BINARY
    INT_HEX
    INT_OCTAL
    IS
    LEFT_BRACE
    LEFT_BRACKET
    LEFT_PARENTHESIS
    LESS_THAN
    LESS_THAN_OR_EQUAL
    LIST
    LIST_NEW
    LOGICAL_AND
    LOGICAL_OR
    MINUS
    MULTIPLY
    NAMESPACE
    NEWLINE
    NOT
    NOT_EQUAL
    NULL
    NULL_DOT
    NULL_JOIN
    OVER
    PLUS
    POWER
    QUESTION_MARK
    REMAINDER
    RETURN
    RIGHT_BRACE
    RIGHT_BRACKET
    RIGHT_PARENTHESIS
    SEMICOLON
    SET
    SET_NEW
    SHIFT_LEFT
    SHIFT_RIGHT
    STRING
    SUPER
    SWITCH
    THROW
    TILDE
    TRUE
    TRY
    UNSIGNED_SHIFT_RIGHT
    VAR
    WHILE
    WHITESPACE
    XML_CHILD
    XML_END_EMPTY
    XML_NEW
    XML_START_CLOSE
    YY_INVALID_ACTION
  }

  const yy_accept List<TokenKind> = [.YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .END_OF_FILE, .ERROR, .WHITESPACE, .NEWLINE, .NOT, .ERROR, .COMMENT, .REMAINDER, .BITWISE_AND, .ERROR, .LEFT_PARENTHESIS, .RIGHT_PARENTHESIS, .MULTIPLY, .PLUS, .COMMA, .MINUS, .DOT, .DIVIDE, .INT, .INT, .COLON, .SEMICOLON, .LESS_THAN, .ASSIGN, .GREATER_THAN, .QUESTION_MARK, .ERROR, .IDENTIFIER, .LEFT_BRACKET, .RIGHT_BRACKET, .BITWISE_XOR, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .LEFT_BRACE, .BITWISE_OR, .RIGHT_BRACE, .TILDE, .WHITESPACE, .NEWLINE, .NOT_EQUAL, .YY_INVALID_ACTION, .STRING, .YY_INVALID_ACTION, .COMMENT, .COMMENT, .ASSIGN_REMAINDER, .LOGICAL_AND, .ASSIGN_BITWISE_AND, .YY_INVALID_ACTION, .CHARACTER, .YY_INVALID_ACTION, .POWER, .ASSIGN_MULTIPLY, .INCREMENT, .ASSIGN_PLUS, .DECREMENT, .ASSIGN_MINUS, .DOT_DOT, .ASSIGN_DIVIDE, .XML_END_EMPTY, .YY_INVALID_ACTION, .INT, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .DOUBLE_COLON, .XML_START_CLOSE, .SHIFT_LEFT, .LESS_THAN_OR_EQUAL, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .EQUAL, .ARROW, .GREATER_THAN_OR_EQUAL, .SHIFT_RIGHT, .NULL_DOT, .ASSIGN_NULL, .NULL_JOIN, .ANNOTATION, .IDENTIFIER, .YY_INVALID_ACTION, .INDEX, .YY_INVALID_ACTION, .ASSIGN_BITWISE_XOR, .AS, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IF, .IN, .IS, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .ASSIGN_BITWISE_OR, .LOGICAL_OR, .ASSIGN_POWER, .DOUBLE, .YY_INVALID_ACTION, .DOUBLE, .INT_BINARY, .INT_OCTAL, .INT_HEX, .ASSIGN_SHIFT_LEFT, .COMPARE, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .ASSIGN_SHIFT_RIGHT, .UNSIGNED_SHIFT_RIGHT, .ANNOTATION, .YY_INVALID_ACTION, .ASSIGN_INDEX, .YY_INVALID_ACTION, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .DEF, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .FOR, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .TRY, .VAR, .IDENTIFIER, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .ASSIGN_UNSIGNED_SHIFT_RIGHT, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .IDENTIFIER, .CASE, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .ELSE, .ENUM, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .NULL, .OVER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .TRUE, .IDENTIFIER, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .DOUBLE, .YY_INVALID_ACTION, .XML_NEW, .LIST, .LIST_NEW, .BREAK, .CATCH, .CLASS, .CONST, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .FALSE, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .SUPER, .IDENTIFIER, .THROW, .WHILE, .SET, .SET_NEW, .YY_INVALID_ACTION, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .RETURN, .SWITCH, .YY_INVALID_ACTION, .IDENTIFIER, .DEFAULT, .DYNAMIC, .FINALLY, .IDENTIFIER, .IDENTIFIER, .XML_CHILD, .CONTINUE, .IDENTIFIER, .IDENTIFIER, .INTERFACE, .NAMESPACE, .YY_INVALID_ACTION]
  const yy_ec = [0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 21, 21, 22, 23, 24, 25, 26, 27, 28, 29, 29, 29, 29, 30, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 33, 34, 35, 31, 1, 36, 37, 38, 39, 40, 41, 31, 42, 43, 31, 44, 45, 46, 47, 48, 49, 31, 50, 51, 52, 53, 54, 55, 56, 57, 31, 58, 59, 60, 61, 1]
  const yy_meta = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 4, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1]
  const yy_base = [0, 0, 0, 342, 343, 339, 60, 315, 59, 336, 313, 57, 57, 343, 343, 55, 56, 343, 53, 321, 45, 77, 83, 314, 343, 59, 47, 49, 61, 0, 0, 71, 343, 310, 283, 283, 64, 51, 74, 79, 69, 58, 278, 291, 71, 86, 294, 287, 113, 105, 343, 343, 326, 129, 343, 129, 343, 324, 323, 343, 343, 343, 343, 126, 343, 322, 299, 343, 343, 343, 343, 343, 343, 343, 343, 119, 125, 148, 129, 131, 0, 343, 343, 298, 296, 305, 280, 343, 343, 343, 127, 343, 343, 343, 0, 0, 303, 293, 277, 343, 0, 276, 105, 279, 267, 272, 265, 260, 257, 264, 261, 257, 0, 254, 0, 259, 259, 263, 250, 252, 257, 249, 101, 248, 254, 280, 255, 343, 343, 343, 152, 156, 160, 165, 167, 0, 343, 343, 278, 238, 343, 267, 0, 275, 343, 235, 253, 248, 249, 235, 137, 249, 248, 243, 236, 230, 244, 0, 239, 238, 232, 226, 222, 234, 221, 224, 231, 0, 0, 225, 253, 213, 178, 251, 240, 343, 231, 230, 219, 0, 220, 210, 208, 216, 205, 211, 0, 0, 216, 210, 204, 202, 0, 0, 202, 201, 212, 194, 0, 208, 187, 186, 182, 186, 221, 343, 343, 343, 0, 0, 0, 0, 197, 198, 199, 0, 196, 199, 190, 191, 0, 195, 0, 0, 343, 343, 219, 182, 182, 195, 175, 195, 194, 0, 0, 169, 154, 0, 0, 0, 152, 104, 343, 0, 49, 39, 0, 0, 343, 207, 211, 215, 217, 220, 223, 225]
  const yy_def = [0, 248, 1, 248, 248, 248, 248, 248, 249, 250, 248, 248, 251, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 252, 253, 248, 248, 248, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 248, 248, 248, 248, 248, 248, 248, 249, 248, 249, 250, 248, 248, 248, 248, 251, 248, 251, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 254, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 255, 253, 248, 248, 248, 248, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 254, 248, 248, 248, 248, 248, 248, 255, 248, 248, 248, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 248, 248, 248, 248, 248, 248, 248, 248, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 248, 248, 248, 248, 248, 248, 248, 248, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 248, 248, 248, 253, 253, 253, 253, 253, 253, 253, 253, 248, 253, 253, 253, 253, 253, 253, 248, 253, 253, 253, 253, 253, 0, 248, 248, 248, 248, 248, 248, 248]
  const yy_nxt = [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 22, 22, 23, 24, 25, 26, 27, 28, 29, 30, 30, 30, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39, 30, 40, 30, 30, 30, 41, 42, 30, 43, 44, 45, 30, 46, 47, 30, 30, 48, 49, 50, 51, 53, 53, 56, 61, 64, 66, 70, 68, 73, 74, 87, 88, 89, 90, 82, 91, 71, 247, 67, 69, 62, 83, 84, 85, 92, 96, 93, 246, 65, 105, 57, 75, 115, 76, 76, 76, 76, 75, 102, 76, 76, 76, 76, 97, 86, 77, 106, 103, 112, 116, 104, 77, 78, 109, 113, 77, 98, 107, 114, 108, 110, 77, 119, 79, 120, 111, 121, 125, 127, 53, 53, 80, 56, 64, 122, 130, 130, 130, 130, 75, 245, 76, 76, 76, 76, 133, 133, 134, 134, 134, 140, 141, 166, 77, 147, 148, 167, 65, 126, 131, 57, 131, 128, 77, 132, 132, 132, 132, 130, 130, 130, 130, 132, 132, 132, 132, 132, 132, 132, 132, 172, 133, 133, 134, 134, 134, 182, 183, 244, 202, 172, 202, 243, 242, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 55, 55, 55, 55, 58, 58, 58, 58, 63, 63, 63, 63, 94, 94, 95, 95, 95, 135, 135, 142, 142, 142, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 181, 180, 179, 178, 177, 176, 175, 174, 173, 171, 170, 169, 168, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 146, 145, 144, 143, 139, 138, 137, 136, 129, 248, 59, 248, 52, 124, 123, 118, 117, 101, 100, 99, 81, 72, 60, 59, 54, 52, 248, 3, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248]
  const yy_chk = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 8, 11, 12, 15, 18, 16, 20, 20, 26, 26, 27, 27, 25, 28, 18, 245, 15, 16, 11, 25, 25, 25, 28, 31, 28, 244, 12, 37, 8, 21, 41, 21, 21, 21, 21, 22, 36, 22, 22, 22, 22, 31, 25, 21, 37, 36, 40, 41, 36, 22, 21, 39, 40, 21, 31, 38, 40, 38, 39, 22, 44, 21, 44, 39, 45, 48, 49, 53, 53, 21, 55, 63, 45, 75, 75, 75, 75, 76, 241, 76, 76, 76, 76, 78, 78, 79, 79, 79, 90, 90, 122, 76, 102, 102, 122, 63, 48, 77, 55, 77, 49, 76, 77, 77, 77, 77, 130, 130, 130, 130, 131, 131, 131, 131, 132, 132, 132, 132, 130, 133, 133, 134, 134, 134, 150, 150, 240, 172, 130, 172, 236, 235, 172, 172, 172, 172, 202, 202, 202, 202, 203, 203, 203, 203, 249, 249, 249, 249, 250, 250, 250, 250, 251, 251, 251, 251, 252, 252, 253, 253, 253, 254, 254, 255, 255, 255, 232, 231, 230, 229, 228, 227, 226, 221, 219, 218, 217, 216, 214, 213, 212, 204, 201, 200, 199, 197, 196, 195, 194, 191, 190, 189, 188, 185, 184, 183, 182, 181, 180, 178, 177, 176, 174, 173, 171, 170, 169, 166, 165, 164, 163, 162, 161, 160, 159, 158, 156, 155, 154, 153, 152, 151, 149, 148, 147, 146, 145, 143, 141, 139, 138, 126, 125, 124, 123, 121, 120, 119, 118, 117, 116, 115, 113, 111, 110, 109, 108, 107, 106, 105, 104, 103, 101, 98, 97, 96, 86, 85, 84, 83, 66, 65, 58, 57, 52, 47, 46, 43, 42, 35, 34, 33, 23, 19, 10, 9, 7, 5, 3, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248]
  const YY_JAM_STATE = 248
  const YY_ACCEPT_LENGTH = 249
}
