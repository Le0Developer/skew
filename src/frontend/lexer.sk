################################################################################
#
# This is a generated file, all edits will be lost!
#
################################################################################

namespace Skew {
  enum TokenKind {
    ANNOTATION
    ARROW
    AS
    ASSIGN
    ASSIGN_BITWISE_AND
    ASSIGN_BITWISE_OR
    ASSIGN_BITWISE_XOR
    ASSIGN_DIVIDE
    ASSIGN_INDEX
    ASSIGN_MINUS
    ASSIGN_MULTIPLY
    ASSIGN_NULL
    ASSIGN_PLUS
    ASSIGN_POWER
    ASSIGN_REMAINDER
    ASSIGN_SHIFT_LEFT
    ASSIGN_SHIFT_RIGHT
    ASSIGN_UNSIGNED_SHIFT_RIGHT
    BITWISE_AND
    BITWISE_OR
    BITWISE_XOR
    BREAK
    CASE
    CATCH
    CHARACTER
    CLASS
    COLON
    COMMA
    COMMENT
    COMPARE
    CONST
    CONTINUE
    DECREMENT
    DEF
    DEFAULT
    DIVIDE
    DOT
    DOT_DOT
    DOUBLE
    DOUBLE_COLON
    DYNAMIC
    ELSE
    END_OF_FILE
    ENUM
    EQUAL
    ERROR
    FALSE
    FINALLY
    FOR
    GREATER_THAN
    GREATER_THAN_OR_EQUAL
    IDENTIFIER
    IF
    IN
    INCREMENT
    INDEX
    INT
    INTERFACE
    INT_BINARY
    INT_HEX
    INT_OCTAL
    IS
    LEFT_BRACE
    LEFT_BRACKET
    LEFT_PARENTHESIS
    LESS_THAN
    LESS_THAN_OR_EQUAL
    LIST
    LIST_NEW
    LOGICAL_AND
    LOGICAL_OR
    MINUS
    MULTIPLY
    NAMESPACE
    NEWLINE
    NOT
    NOT_EQUAL
    NULL
    NULL_DOT
    NULL_JOIN
    OVER
    PLUS
    POWER
    QUESTION_MARK
    REMAINDER
    RETURN
    RIGHT_BRACE
    RIGHT_BRACKET
    RIGHT_PARENTHESIS
    SEMICOLON
    SET
    SET_NEW
    SHIFT_LEFT
    SHIFT_RIGHT
    STRING
    SUPER
    SWITCH
    THROW
    TILDE
    TRUE
    TRY
    UNSIGNED_SHIFT_RIGHT
    VAR
    WHILE
    WHITESPACE
    XML_CHILD
    XML_EMPTY
    YY_INVALID_ACTION
  }

  const yy_accept List<TokenKind> = [.YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .END_OF_FILE, .ERROR, .WHITESPACE, .NEWLINE, .NOT, .ERROR, .COMMENT, .REMAINDER, .BITWISE_AND, .ERROR, .LEFT_PARENTHESIS, .RIGHT_PARENTHESIS, .MULTIPLY, .PLUS, .COMMA, .MINUS, .DOT, .DIVIDE, .INT, .INT, .COLON, .SEMICOLON, .LESS_THAN, .ASSIGN, .GREATER_THAN, .QUESTION_MARK, .ERROR, .IDENTIFIER, .LEFT_BRACKET, .RIGHT_BRACKET, .BITWISE_XOR, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .LEFT_BRACE, .BITWISE_OR, .RIGHT_BRACE, .TILDE, .WHITESPACE, .NEWLINE, .NOT_EQUAL, .YY_INVALID_ACTION, .STRING, .YY_INVALID_ACTION, .COMMENT, .COMMENT, .ASSIGN_REMAINDER, .LOGICAL_AND, .ASSIGN_BITWISE_AND, .YY_INVALID_ACTION, .CHARACTER, .YY_INVALID_ACTION, .POWER, .ASSIGN_MULTIPLY, .INCREMENT, .ASSIGN_PLUS, .DECREMENT, .ASSIGN_MINUS, .DOT_DOT, .ASSIGN_DIVIDE, .XML_EMPTY, .YY_INVALID_ACTION, .INT, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .DOUBLE_COLON, .SHIFT_LEFT, .LESS_THAN_OR_EQUAL, .YY_INVALID_ACTION, .EQUAL, .ARROW, .GREATER_THAN_OR_EQUAL, .SHIFT_RIGHT, .NULL_DOT, .ASSIGN_NULL, .NULL_JOIN, .ANNOTATION, .IDENTIFIER, .YY_INVALID_ACTION, .INDEX, .YY_INVALID_ACTION, .ASSIGN_BITWISE_XOR, .AS, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IF, .IN, .IS, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .ASSIGN_BITWISE_OR, .LOGICAL_OR, .ASSIGN_POWER, .DOUBLE, .YY_INVALID_ACTION, .DOUBLE, .INT_BINARY, .INT_OCTAL, .INT_HEX, .ASSIGN_SHIFT_LEFT, .COMPARE, .YY_INVALID_ACTION, .ASSIGN_SHIFT_RIGHT, .UNSIGNED_SHIFT_RIGHT, .ANNOTATION, .YY_INVALID_ACTION, .ASSIGN_INDEX, .YY_INVALID_ACTION, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .DEF, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .FOR, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .TRY, .VAR, .IDENTIFIER, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .ASSIGN_UNSIGNED_SHIFT_RIGHT, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .IDENTIFIER, .CASE, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .ELSE, .ENUM, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .NULL, .OVER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .TRUE, .IDENTIFIER, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .YY_INVALID_ACTION, .DOUBLE, .YY_INVALID_ACTION, .LIST, .LIST_NEW, .BREAK, .CATCH, .CLASS, .CONST, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .FALSE, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .SUPER, .IDENTIFIER, .THROW, .WHILE, .SET, .SET_NEW, .YY_INVALID_ACTION, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .IDENTIFIER, .RETURN, .SWITCH, .YY_INVALID_ACTION, .IDENTIFIER, .DEFAULT, .DYNAMIC, .FINALLY, .IDENTIFIER, .IDENTIFIER, .XML_CHILD, .CONTINUE, .IDENTIFIER, .IDENTIFIER, .INTERFACE, .NAMESPACE, .YY_INVALID_ACTION]
  const yy_ec = [0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 21, 21, 22, 23, 24, 25, 26, 27, 28, 29, 29, 29, 29, 30, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 33, 34, 35, 31, 1, 36, 37, 38, 39, 40, 41, 31, 42, 43, 31, 44, 45, 46, 47, 48, 49, 31, 50, 51, 52, 53, 54, 55, 56, 57, 31, 58, 59, 60, 61, 1]
  const yy_meta = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 4, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1]
  const yy_base = [0, 0, 0, 337, 338, 334, 60, 310, 59, 331, 308, 57, 57, 338, 338, 55, 56, 338, 53, 316, 45, 77, 83, 309, 338, 48, 50, 58, 61, 0, 0, 71, 338, 305, 278, 278, 64, 49, 63, 79, 79, 58, 273, 286, 66, 74, 289, 282, 112, 104, 338, 338, 321, 129, 338, 129, 338, 319, 318, 338, 338, 338, 338, 127, 338, 317, 294, 338, 338, 338, 338, 338, 338, 338, 338, 119, 125, 151, 129, 131, 0, 338, 293, 291, 300, 338, 338, 338, 127, 338, 338, 338, 0, 0, 299, 289, 273, 338, 0, 272, 105, 275, 263, 268, 261, 256, 253, 260, 257, 253, 0, 250, 0, 255, 255, 259, 246, 248, 253, 245, 101, 244, 250, 276, 251, 338, 338, 338, 155, 159, 163, 149, 168, 0, 338, 338, 274, 338, 264, 0, 272, 338, 232, 250, 245, 246, 232, 138, 246, 245, 240, 233, 227, 241, 0, 236, 235, 229, 223, 219, 231, 218, 221, 228, 0, 0, 222, 250, 210, 178, 248, 338, 229, 228, 217, 0, 218, 208, 206, 214, 203, 209, 0, 0, 214, 208, 202, 200, 0, 0, 200, 199, 210, 192, 0, 206, 185, 184, 182, 186, 219, 338, 338, 0, 0, 0, 0, 195, 196, 197, 0, 194, 197, 188, 189, 0, 193, 0, 0, 338, 338, 217, 180, 180, 193, 173, 158, 156, 0, 0, 135, 102, 0, 0, 0, 97, 53, 338, 0, 45, 39, 0, 0, 338, 207, 211, 215, 217, 220, 223, 225]
  const yy_def = [0, 243, 1, 243, 243, 243, 243, 243, 244, 245, 243, 243, 246, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 247, 248, 243, 243, 243, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 243, 243, 243, 243, 243, 243, 243, 244, 243, 244, 245, 243, 243, 243, 243, 246, 243, 246, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 249, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 250, 248, 243, 243, 243, 243, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 249, 243, 243, 243, 243, 243, 250, 243, 243, 243, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 243, 243, 243, 243, 243, 243, 243, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 243, 243, 243, 243, 243, 243, 243, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 243, 243, 243, 248, 248, 248, 248, 248, 248, 248, 248, 243, 248, 248, 248, 248, 248, 248, 243, 248, 248, 248, 248, 248, 0, 243, 243, 243, 243, 243, 243, 243]
  const yy_nxt = [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 22, 22, 23, 24, 25, 26, 27, 28, 29, 30, 30, 30, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39, 30, 40, 30, 30, 30, 41, 42, 30, 43, 44, 45, 30, 46, 47, 30, 30, 48, 49, 50, 51, 53, 53, 56, 61, 64, 66, 70, 68, 73, 74, 82, 83, 84, 85, 86, 89, 71, 242, 67, 69, 62, 87, 88, 241, 90, 94, 91, 103, 65, 240, 57, 75, 113, 76, 76, 76, 76, 75, 100, 76, 76, 76, 76, 95, 104, 77, 105, 101, 106, 114, 102, 77, 78, 107, 119, 77, 96, 117, 110, 118, 108, 77, 120, 79, 111, 109, 123, 125, 112, 53, 53, 80, 56, 239, 64, 128, 128, 128, 128, 75, 238, 76, 76, 76, 76, 131, 131, 132, 132, 132, 137, 138, 163, 77, 144, 145, 164, 124, 65, 237, 57, 126, 129, 77, 129, 131, 131, 130, 130, 130, 130, 128, 128, 128, 128, 130, 130, 130, 130, 130, 130, 130, 130, 169, 132, 132, 132, 178, 179, 198, 236, 198, 235, 169, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 55, 55, 55, 55, 58, 58, 58, 58, 63, 63, 63, 63, 92, 92, 93, 93, 93, 133, 133, 139, 139, 139, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 177, 176, 175, 174, 173, 172, 171, 170, 168, 167, 166, 165, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 143, 142, 141, 140, 136, 135, 134, 127, 243, 59, 243, 52, 122, 121, 116, 115, 99, 98, 97, 81, 72, 60, 59, 54, 52, 243, 3, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243]
  const yy_chk = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 8, 11, 12, 15, 18, 16, 20, 20, 25, 25, 25, 26, 26, 28, 18, 240, 15, 16, 11, 27, 27, 239, 28, 31, 28, 37, 12, 236, 8, 21, 41, 21, 21, 21, 21, 22, 36, 22, 22, 22, 22, 31, 37, 21, 38, 36, 38, 41, 36, 22, 21, 39, 45, 21, 31, 44, 40, 44, 39, 22, 45, 21, 40, 39, 48, 49, 40, 53, 53, 21, 55, 235, 63, 75, 75, 75, 75, 76, 231, 76, 76, 76, 76, 78, 78, 79, 79, 79, 88, 88, 120, 76, 100, 100, 120, 48, 63, 230, 55, 49, 77, 76, 77, 131, 131, 77, 77, 77, 77, 128, 128, 128, 128, 129, 129, 129, 129, 130, 130, 130, 130, 128, 132, 132, 132, 147, 147, 169, 227, 169, 226, 128, 169, 169, 169, 169, 198, 198, 198, 198, 199, 199, 199, 199, 244, 244, 244, 244, 245, 245, 245, 245, 246, 246, 246, 246, 247, 247, 248, 248, 248, 249, 249, 250, 250, 250, 225, 224, 223, 222, 221, 216, 214, 213, 212, 211, 209, 208, 207, 200, 197, 196, 195, 193, 192, 191, 190, 187, 186, 185, 184, 181, 180, 179, 178, 177, 176, 174, 173, 172, 170, 168, 167, 166, 163, 162, 161, 160, 159, 158, 157, 156, 155, 153, 152, 151, 150, 149, 148, 146, 145, 144, 143, 142, 140, 138, 136, 124, 123, 122, 121, 119, 118, 117, 116, 115, 114, 113, 111, 109, 108, 107, 106, 105, 104, 103, 102, 101, 99, 96, 95, 94, 84, 83, 82, 66, 65, 58, 57, 52, 47, 46, 43, 42, 35, 34, 33, 23, 19, 10, 9, 7, 5, 3, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243]
  const YY_JAM_STATE = 243
  const YY_ACCEPT_LENGTH = 244
}
