namespace skew {
  def motionPass(global ObjectSymbol, graph CallGraph) {
    var parents = IntMap<ObjectSymbol>.new

    for info in graph.callInfo {
      var symbol = info.symbol

      # Move global functions with implementations off imported objects
      if symbol.kind == .FUNCTION_GLOBAL && symbol.parent.isImported && !symbol.isImported {
        var function = symbol.asFunctionSymbol
        var parent = parents.get(function.parent.id, null)

        # Create a parallel namespace next to the parent
        if parent == null {
          var common = function.parent.parent.asObjectSymbol
          parent = ObjectSymbol.new(.OBJECT_NAMESPACE, "in_" + function.parent.name)
          parent.parent = common
          common.objects.append(parent)
          parents[function.parent.id] = parent
        }

        # Move this function into that parallel namespace
        function.parent.asObjectSymbol.functions.removeOne(function)
        parent.functions.append(function)
        function.parent = parent
      }
    }
  }
}
