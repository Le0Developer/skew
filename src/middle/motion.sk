namespace skew {
  void motionPass(ObjectSymbol global, CallGraph graph) {
    var parents = IntMap<ObjectSymbol>()

    for (var i = 0; i < graph.callInfo.size(); i++) {
      var info = graph.callInfo[i]
      var symbol = info.symbol

      // Move global functions with implementations off imported objects
      if (symbol.kind == .FUNCTION_GLOBAL && symbol.parent.isImported() && !symbol.isImported()) {
        var function = symbol.asFunctionSymbol()
        var parent = parents.getOrDefault(function.parent.id, null)

        // Create a parallel namespace next to the parent
        if (parent == null) {
          var common = function.parent.parent.asObjectSymbol()
          parent = ObjectSymbol(.OBJECT_NAMESPACE, "in_" + function.parent.name)
          parent.parent = common
          common.objects.push(parent)
          parents[function.parent.id] = parent
        }

        // Move this function into that parallel namespace
        function.parent.asObjectSymbol().functions.removeOnce(function)
        parent.functions.push(function)
        function.parent = parent
      }
    }
  }
}
