namespace Skew {
  const NATIVE_LIBRARY_CPP = "
class bool {
  def toString string {
    return self ? \"true\" : \"false\"
  }
}

class int {
  def toString string {
    return dynamic.intToString(self)
  }

  def >>>(x int) int {
    return (self as dynamic.unsigned >> x) as int
  }
}

class double {
  def toString string {
    return dynamic.doubleToString(self)
  }

  def isNaN bool {
    return dynamic.doubleIsNaN(self)
  }

  def isFinite bool {
    return dynamic.doubleIsFinite(self)
  }
}

class string {
  @rename(\"compare\")
  def <=>(x string) int

  @rename(\"contains\")
  def in(x string) bool
}

class List {
  @rename(\"contains\")
  def in(x T) bool
}

class StringMap {
  @rename(\"contains\")
  def in(x string) bool
}

class IntMap {
  @rename(\"contains\")
  def in(x int) bool
}

@import {
  class StringBuilder {}
  def assert(truth bool)
}
"
}
