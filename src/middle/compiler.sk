namespace skew {
  def compile(log Log, sources List<Source>, cache TypeCache) ObjectSymbol {
    var global = ObjectSymbol.new(.OBJECT_GLOBAL, "<global>")

    sources.prepend(Source.new("<native>", NATIVE_LIBRARY))

    for source in sources {
      var tokens = tokenize(log, source)
      prepareTokens(tokens)
      parsing.parseFile(log, tokens, global)
    }

    if !log.hasErrors {
      mergingPass(log, global)
      if !log.hasErrors {
        resolvingPass(log, global, cache)
        if !log.hasErrors {
          var graph = CallGraph.new(global)
          globalizingPass(global, graph)
          motionPass(global, graph)
          renamingPass(global)
        }
      }
    }

    return global
  }
}
