var NATIVE_LIBRARY = "
class bool { def new() }
class double { def new() }
class int { def new() }
class string { def new() }
"

namespace astral {
  TypeSymbol compile(Log log, List<Source> sources) {
    var global = TypeSymbol(.TYPE_GLOBAL, "<global>")

    sources.unshift(Source("<native>", NATIVE_LIBRARY))
    for (var i = 0; i < sources.size(); i++) {
      var tokens = tokenize(log, sources[i])
      prepareTokens(tokens)
      parseFile(log, tokens, global)
    }

    if (!log.hasErrors()) {
      mergingPass(log, global)
      if (!log.hasErrors()) {
        resolvingPass(log, global)
      }
    }

    return global
  }
}
