namespace Terminal {
  enum Color {
    DEFAULT
    BOLD
    GRAY
    RED
    GREEN
    YELLOW
    BLUE
    MAGENTA
    CYAN

    def toEscapeCode int {
      return colorToEscapeCode[self]
    }
  }

  def setColor(color Color)
  def width int
  def height int
  def print(text string)
  def flush
  def write(text string)

  if TARGET == .JAVASCRIPT {
    def setColor(color Color) {
      if dynamic.process.stdout.isTTY {
        write("\x1B[0;" + color.toEscapeCode.toString + "m")
      }
    }

    def width int {
      return dynamic.process.stdout.columns
    }

    def height int {
      return dynamic.process.stdout.rows
    }

    def print(text string) {
      write(text + "\n")
    }

    def flush {
    }

    def write(text string) {
      dynamic.process.stdout.write(text)
    }

    const colorToEscapeCode IntMap<int> = {
      Color.DEFAULT: 0,
      Color.BOLD: 1,
      Color.GRAY: 90,
      Color.RED: 91,
      Color.GREEN: 92,
      Color.YELLOW: 93,
      Color.BLUE: 94,
      Color.MAGENTA: 95,
      Color.CYAN: 96,
    }
  }

  else if TARGET == .CSHARP {
    def setColor(color Color) {
      switch color {
        case .BOLD, .DEFAULT { dynamic.System.Console.ResetColor() }
        case .GRAY { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.DarkGray }
        case .RED { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.Red }
        case .GREEN { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.Green }
        case .YELLOW { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.Yellow }
        case .BLUE { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.Blue }
        case .MAGENTA { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.Magenta }
        case .CYAN { dynamic.System.Console.ForegroundColor = dynamic.System.ConsoleColor.Cyan }
      }
    }

    def width int {
      return dynamic.System.Console.BufferWidth
    }

    def height int {
      return dynamic.System.Console.BufferHeight
    }

    def print(text string) {
      dynamic.System.Console.WriteLine(text)
    }

    def flush {
    }

    def write(text string) {
      dynamic.System.Console.Write(text)
    }

    const colorToEscapeCode IntMap<int> = {
      Color.DEFAULT: 0,
      Color.BOLD: 1,
      Color.GRAY: 90,
      Color.RED: 91,
      Color.GREEN: 92,
      Color.YELLOW: 93,
      Color.BLUE: 94,
      Color.MAGENTA: 95,
      Color.CYAN: 96,
    }
  }
}
