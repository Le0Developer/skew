in List {
  bool isEqualTo(List<T> other) {
    var n = size()
    if (n != other.size()) {
      return false
    }
    for (var i = 0; i < n; i++) {
      if (this[i] != other[i]) {
        return false
      }
    }
    return true
  }

  void pushAll(List<T> all) {
    for (var i = 0, n = all.size(); i < n; i++) {
      push(all[i])
    }
  }
}

namespace prettyPrint {
  string plural(int value) {
    return value == 1 ? "" : "s"
  }

  string join(List<string> parts, string trailing) {
    if (parts.size() < 3) {
      return (" " + trailing + " ").join(parts)
    }
    var text = ""
    for (var i = 0; i < parts.size(); i++) {
      if (i != 0) {
        text += ", "
        if (i + 1 == parts.size()) {
          text += trailing + " "
        }
      }
      text += parts[i]
    }
    return text
  }
}

int hashCombine(int left, int right) {
  return left ^ right - 0x61c88647 + (left << 6) + (left >> 2)
}
