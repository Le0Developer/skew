namespace double {
  var INFINITY double
  def min(a double, b double) double
  def max(a double, b double) double
}

class List<T> {
}

class Point {
  var x double
  var y double

  def new() {
  }
}

class Rect {
  var x double
  var y double
  var width double
  var height double

  def new() {
  }

  def new(x double, y double, w double, h double) {
    self.x = x
    self.y = y
    width = w
    height = h
  }

  def new(w double, h double) {
    width = w
    height = h
  }

  def new(points List<Point>) {
    var xmin = double.INFINITY
    var ymin = double.INFINITY
    var xmax = -double.INFINITY
    var ymax = -double.INFINITY

    var i = 0
    while i < points.length {
      var p = points.get(i)
      xmin = double.min(xmin, p.x)
      ymin = double.min(ymin, p.y)
      xmax = double.max(xmax, p.x)
      ymax = double.max(ymax, p.y)
      i += 1
    }

    x = xmin
    y = ymin
    width = xmax - xmin
    height = ymax - ymin
  }

  def area() double {
    return width * height
  }
}

namespace Rect {
  def invalid() Rect {
    return new(
      double.INFINITY,
      double.INFINITY,
      -double.INFINITY,
      -double.INFINITY)
  }
}

class double {
  def -() double
  def -(v double) double
  def *(v double) double
}
